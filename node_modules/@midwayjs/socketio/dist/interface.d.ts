import * as SocketIO from 'socket.io';
import { IConfigurationOptions, IMidwayApplication, IMidwayContext, NextFunction as BaseNextFunction } from '@midwayjs/core';
export declare type IMidwaySocketIOApplication = IMidwayApplication<IMidwaySocketIOContext, {
    use(fn: (socket: IMidwaySocketIOContext, fn: (err?: any) => void) => void): SocketIO.Namespace;
} & SocketIO.Server>;
export declare type IMidwaySocketIOConfigurationOptions = {
    port?: number;
    pubClient?: any;
    subClient?: any;
} & Partial<SocketIO.ServerOptions> & IConfigurationOptions;
export declare type IMidwaySocketIOContext = IMidwayContext<SocketIO.Socket & {
    app: IMidwaySocketIOApplication;
}>;
export declare type Application = IMidwaySocketIOApplication;
export interface Context extends IMidwaySocketIOContext {
}
export declare type NextFunction = BaseNextFunction;
//# sourceMappingURL=interface.d.ts.map