import { BaseFramework, IMidwayBootstrapOptions, MidwayFrameworkType } from '@midwayjs/core';
import { IMidwaySocketIOApplication, IMidwaySocketIOConfigurationOptions, IMidwaySocketIOContext } from './interface';
export declare class MidwaySocketIOFramework extends BaseFramework<IMidwaySocketIOApplication, IMidwaySocketIOContext, IMidwaySocketIOConfigurationOptions> {
    private namespaceList;
    configure(): IMidwaySocketIOConfigurationOptions;
    applicationInitialize(options: IMidwayBootstrapOptions): void;
    app: IMidwaySocketIOApplication;
    protected afterContainerReady(options: Partial<IMidwayBootstrapOptions>): Promise<void>;
    run(): Promise<void>;
    protected beforeStop(): Promise<void>;
    getFrameworkType(): MidwayFrameworkType;
    private loadMidwayController;
    private addNamespace;
    private bindSocketResponse;
    getFrameworkName(): string;
}
//# sourceMappingURL=framework.d.ts.map