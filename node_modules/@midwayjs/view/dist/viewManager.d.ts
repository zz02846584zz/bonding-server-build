import { IViewEngine } from './interface';
export declare class ViewManager extends Map {
    app: any;
    viewConfig: any;
    config: any;
    extMap: Map<any, any>;
    fileMap: Map<any, any>;
    init(): void;
    /**
     * This method can register view engine.
     *
     * You can define a view engine class contains two method, `render` and `renderString`
     *
     * ```js
     * class View {
     *   render() {}
     *   renderString() {}
     * }
     * ```
     * @param {String} name - the name of view engine
     * @param {Object} viewEngine - the class of view engine
     */
    use(name: string, viewEngine: new (...args: any[]) => IViewEngine): void;
    /**
     * Resolve the path based on the given name,
     * if the name is `user.html` and root is `view` (by default),
     * it will return `view/user.html`
     * @param {String} name - the given path name, it's relative to config.root
     * @return {String} filename - the full path
     */
    resolve(name: string): Promise<string>;
}
//# sourceMappingURL=viewManager.d.ts.map