import ts from 'typescript';
export interface Traverser {
    enter?: (node: ts.Node, parent: ts.Node | undefined) => void;
    leave?: (node: ts.Node) => void;
}
export interface Visitor {
    enter?: (node: ts.Node, parent: ts.Node | undefined) => ts.Node | undefined;
    leave?: (node: ts.Node) => ts.Node | undefined;
}
export declare function traverse(node: ts.Node | undefined, visitor: Traverser, ancestor?: ts.Node): void;
export declare function visit<T extends ts.Node>(node: T, visitor: Visitor, ctx: ts.TransformationContext, ancestor?: ts.Node): any;
//# sourceMappingURL=traverse.d.ts.map