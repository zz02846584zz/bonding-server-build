import * as DefaultConfig from './config/config.default';
import * as Joi from 'joi';
import { MidwayI18nServiceSingleton } from '@midwayjs/i18n';
import { ObjectSchema } from 'joi';
export declare class ValidateService {
    protected validateConfig: typeof DefaultConfig.validate;
    protected i18nConfig: any;
    protected i18nService: MidwayI18nServiceSingleton;
    protected messages: {};
    protected init(): Promise<void>;
    validate<T extends new (...args: any[]) => any>(ClzType: T, value: any, options?: {
        errorStatus?: number;
        locale?: string;
        validationOptions?: Joi.ValidationOptions;
    }): Joi.ValidationResult<T>;
    validateWithSchema<T>(schema: ObjectSchema<any>, value: any, options?: {
        errorStatus?: number;
        locale?: string;
        validationOptions?: Joi.ValidationOptions;
    }): Joi.ValidationResult<T>;
    getSchema<T extends new (...args: any[]) => any>(ClzType: T): ObjectSchema<any>;
}
//# sourceMappingURL=service.d.ts.map